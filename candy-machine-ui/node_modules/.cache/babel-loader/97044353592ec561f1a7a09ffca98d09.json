{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.statusFromToken = exports.resetState = void 0;\n\nconst types_1 = require(\"../types\"); // eslint-disable-next-line import/prefer-default-export\n\n\nconst resetState = state => Object.assign(Object.assign({}, state), {\n  gatewayStatus: types_1.GatewayStatus.UNKNOWN,\n  tokenRequested: false,\n  iframeMinimized: false,\n  firstTokenCheck: true,\n  renderIframe: false,\n  gatewayToken: undefined,\n  powoRequested: undefined,\n  refreshIntervalId: undefined,\n  powoFinished: false,\n  refreshInProgress: false,\n  tokenIssuanceState: types_1.TokenIssuanceState.NOT_REQUESTED,\n  walletToRefresh: undefined,\n  walletPowoInProgress: false,\n  gatekeeperRecordState: undefined,\n  civicPass: {\n    status: types_1.CivicPassIssuanceStatus.NOT_REQUESTED,\n    iframeMinimized: false,\n    renderIframe: false\n  }\n});\n\nexports.resetState = resetState;\n\nconst hasExpired = gatewayToken => {\n  const now = Math.floor(Date.now() / 1000);\n  return !!gatewayToken.expiryTime && now >= gatewayToken.expiryTime;\n};\n\nconst isLocationNotSupported = recordState => {\n  if (!recordState) return false;\n  return [types_1.GatekeeperRecordState.LOCATION_NOT_SUPPORTED].includes(recordState);\n};\n\nconst isIssuedLocationNotSupported = recordState => {\n  if (!recordState) return false;\n  return [types_1.GatekeeperRecordState.ISSUED_LOCATION_NOT_SUPPORTED].includes(recordState);\n};\n\nconst statusFromToken = (state, gatewayToken) => {\n  if (!gatewayToken) return state.gatewayStatus;\n\n  switch (gatewayToken.state) {\n    case types_1.State.ACTIVE:\n      if (isLocationNotSupported(state.gatekeeperRecordState)) {\n        return types_1.GatewayStatus.LOCATION_NOT_SUPPORTED;\n      }\n\n      if (isIssuedLocationNotSupported(state.gatekeeperRecordState)) {\n        return types_1.GatewayStatus.REFRESH_TOKEN_REQUIRED;\n      }\n\n      if (state.gatewayStatus === types_1.GatewayStatus.PROOF_OF_WALLET_OWNERSHIP) {\n        return types_1.GatewayStatus.PROOF_OF_WALLET_OWNERSHIP;\n      }\n\n      return hasExpired(gatewayToken) ? types_1.GatewayStatus.REFRESH_TOKEN_REQUIRED : types_1.GatewayStatus.ACTIVE;\n\n    case types_1.State.REVOKED:\n      return types_1.GatewayStatus.REVOKED;\n\n    case types_1.State.FROZEN:\n      return types_1.GatewayStatus.FROZEN;\n\n    default:\n      return types_1.GatewayStatus.UNKNOWN;\n  }\n};\n\nexports.statusFromToken = statusFromToken;","map":{"version":3,"sources":["/Users/shawn/metaplex/js/packages/candy-machine-ui/node_modules/@civic/solana-gateway-react/dist/esm/useReducer/utils.js"],"names":["Object","defineProperty","exports","value","statusFromToken","resetState","types_1","require","state","assign","gatewayStatus","GatewayStatus","UNKNOWN","tokenRequested","iframeMinimized","firstTokenCheck","renderIframe","gatewayToken","undefined","powoRequested","refreshIntervalId","powoFinished","refreshInProgress","tokenIssuanceState","TokenIssuanceState","NOT_REQUESTED","walletToRefresh","walletPowoInProgress","gatekeeperRecordState","civicPass","status","CivicPassIssuanceStatus","hasExpired","now","Math","floor","Date","expiryTime","isLocationNotSupported","recordState","GatekeeperRecordState","LOCATION_NOT_SUPPORTED","includes","isIssuedLocationNotSupported","ISSUED_LOCATION_NOT_SUPPORTED","State","ACTIVE","REFRESH_TOKEN_REQUIRED","PROOF_OF_WALLET_OWNERSHIP","REVOKED","FROZEN"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.statusFromToken = exports.resetState = void 0;\nconst types_1 = require(\"../types\");\n// eslint-disable-next-line import/prefer-default-export\nconst resetState = (state) => (Object.assign(Object.assign({}, state), { gatewayStatus: types_1.GatewayStatus.UNKNOWN, tokenRequested: false, iframeMinimized: false, firstTokenCheck: true, renderIframe: false, gatewayToken: undefined, powoRequested: undefined, refreshIntervalId: undefined, powoFinished: false, refreshInProgress: false, tokenIssuanceState: types_1.TokenIssuanceState.NOT_REQUESTED, walletToRefresh: undefined, walletPowoInProgress: false, gatekeeperRecordState: undefined, civicPass: {\n        status: types_1.CivicPassIssuanceStatus.NOT_REQUESTED,\n        iframeMinimized: false,\n        renderIframe: false,\n    } }));\nexports.resetState = resetState;\nconst hasExpired = (gatewayToken) => {\n    const now = Math.floor(Date.now() / 1000);\n    return !!gatewayToken.expiryTime && now >= gatewayToken.expiryTime;\n};\nconst isLocationNotSupported = (recordState) => {\n    if (!recordState)\n        return false;\n    return [types_1.GatekeeperRecordState.LOCATION_NOT_SUPPORTED].includes(recordState);\n};\nconst isIssuedLocationNotSupported = (recordState) => {\n    if (!recordState)\n        return false;\n    return [types_1.GatekeeperRecordState.ISSUED_LOCATION_NOT_SUPPORTED].includes(recordState);\n};\nconst statusFromToken = (state, gatewayToken) => {\n    if (!gatewayToken)\n        return state.gatewayStatus;\n    switch (gatewayToken.state) {\n        case types_1.State.ACTIVE:\n            if (isLocationNotSupported(state.gatekeeperRecordState)) {\n                return types_1.GatewayStatus.LOCATION_NOT_SUPPORTED;\n            }\n            if (isIssuedLocationNotSupported(state.gatekeeperRecordState)) {\n                return types_1.GatewayStatus.REFRESH_TOKEN_REQUIRED;\n            }\n            if (state.gatewayStatus === types_1.GatewayStatus.PROOF_OF_WALLET_OWNERSHIP) {\n                return types_1.GatewayStatus.PROOF_OF_WALLET_OWNERSHIP;\n            }\n            return hasExpired(gatewayToken) ? types_1.GatewayStatus.REFRESH_TOKEN_REQUIRED : types_1.GatewayStatus.ACTIVE;\n        case types_1.State.REVOKED:\n            return types_1.GatewayStatus.REVOKED;\n        case types_1.State.FROZEN:\n            return types_1.GatewayStatus.FROZEN;\n        default:\n            return types_1.GatewayStatus.UNKNOWN;\n    }\n};\nexports.statusFromToken = statusFromToken;\n"]},"metadata":{},"sourceType":"script"}
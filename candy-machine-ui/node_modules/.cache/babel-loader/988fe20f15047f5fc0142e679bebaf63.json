{"ast":null,"code":"var _jsxFileName = \"/Users/shawn/metaplex/js/packages/candy-machine-ui/src/Header.tsx\";\nimport * as anchor from '@project-serum/anchor';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { MintCountdown } from './MintCountdown';\nimport { toDate, formatNumber } from './utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Header = _ref => {\n  var _candyMachine$state, _candyMachine$state2;\n\n  let {\n    candyMachine\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"row\",\n    justifyContent: \"center\",\n    wrap: \"nowrap\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      wrap: \"nowrap\",\n      children: [candyMachine && /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        wrap: \"nowrap\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            children: \"Remaining\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"textPrimary\",\n            style: {\n              fontWeight: 'bold'\n            },\n            children: `${candyMachine === null || candyMachine === void 0 ? void 0 : candyMachine.state.itemsRemaining}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"textPrimary\",\n            style: {\n              fontWeight: 'bold'\n            },\n            children: getMintPrice(candyMachine)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MintCountdown, {\n        date: toDate(candyMachine !== null && candyMachine !== void 0 && candyMachine.state.goLiveDate ? candyMachine === null || candyMachine === void 0 ? void 0 : candyMachine.state.goLiveDate : candyMachine !== null && candyMachine !== void 0 && candyMachine.state.isPresale ? new anchor.BN(new Date().getTime() / 1000) : undefined),\n        style: {\n          justifyContent: 'flex-end'\n        },\n        status: !(candyMachine !== null && candyMachine !== void 0 && (_candyMachine$state = candyMachine.state) !== null && _candyMachine$state !== void 0 && _candyMachine$state.isActive) || candyMachine !== null && candyMachine !== void 0 && (_candyMachine$state2 = candyMachine.state) !== null && _candyMachine$state2 !== void 0 && _candyMachine$state2.isSoldOut ? 'COMPLETED' : candyMachine !== null && candyMachine !== void 0 && candyMachine.state.isPresale ? 'PRESALE' : 'LIVE'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = Header;\n\nconst getMintPrice = candyMachine => {\n  var _candyMachine$state$w, _candyMachine$state$w2;\n\n  const price = formatNumber.asNumber(candyMachine.state.isPresale && (_candyMachine$state$w = candyMachine.state.whitelistMintSettings) !== null && _candyMachine$state$w !== void 0 && _candyMachine$state$w.discountPrice ? (_candyMachine$state$w2 = candyMachine.state.whitelistMintSettings) === null || _candyMachine$state$w2 === void 0 ? void 0 : _candyMachine$state$w2.discountPrice : candyMachine.state.price);\n  return `â—Ž ${price}`;\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/shawn/metaplex/js/packages/candy-machine-ui/src/Header.tsx"],"names":["anchor","Grid","Typography","MintCountdown","toDate","formatNumber","Header","candyMachine","fontWeight","state","itemsRemaining","getMintPrice","goLiveDate","isPresale","BN","Date","getTime","undefined","justifyContent","isActive","isSoldOut","price","asNumber","whitelistMintSettings","discountPrice"],"mappings":"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","sourcesContent":["import * as anchor from '@project-serum/anchor';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { MintCountdown } from './MintCountdown';\nimport { toDate, formatNumber } from './utils';\nimport { CandyMachineAccount } from './candy-machine';\n\ntype HeaderProps = {\n  candyMachine?: CandyMachineAccount;\n};\n\nexport const Header = ({ candyMachine }: HeaderProps) => {\n  return (\n    <Grid container direction=\"row\" justifyContent=\"center\" wrap=\"nowrap\">\n      <Grid container direction=\"row\" wrap=\"nowrap\">\n        {candyMachine && (\n          <Grid container direction=\"row\" wrap=\"nowrap\">\n            <Grid container direction=\"column\">\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                Remaining\n              </Typography>\n              <Typography\n                variant=\"h6\"\n                color=\"textPrimary\"\n                style={{\n                  fontWeight: 'bold',\n                }}\n              >\n                {`${candyMachine?.state.itemsRemaining}`}\n              </Typography>\n            </Grid>\n            <Grid container direction=\"column\">\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                Price\n              </Typography>\n              <Typography\n                variant=\"h6\"\n                color=\"textPrimary\"\n                style={{ fontWeight: 'bold' }}\n              >\n                {getMintPrice(candyMachine)}\n              </Typography>\n            </Grid>\n          </Grid>\n        )}\n        <MintCountdown\n          date={toDate(\n            candyMachine?.state.goLiveDate\n              ? candyMachine?.state.goLiveDate\n              : candyMachine?.state.isPresale\n              ? new anchor.BN(new Date().getTime() / 1000)\n              : undefined,\n          )}\n          style={{ justifyContent: 'flex-end' }}\n          status={\n            !candyMachine?.state?.isActive || candyMachine?.state?.isSoldOut\n              ? 'COMPLETED'\n              : candyMachine?.state.isPresale\n              ? 'PRESALE'\n              : 'LIVE'\n          }\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nconst getMintPrice = (candyMachine: CandyMachineAccount): string => {\n  const price = formatNumber.asNumber(\n    candyMachine.state.isPresale && candyMachine.state.whitelistMintSettings?.discountPrice\n      ? candyMachine.state.whitelistMintSettings?.discountPrice!\n      : candyMachine.state.price!,\n  );\n  return `â—Ž ${price}`;\n};\n"]},"metadata":{},"sourceType":"module"}
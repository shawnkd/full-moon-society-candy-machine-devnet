{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar Network;\n\n(function (Network) {\n  Network[\"IGNITE\"] = \"ignitePass\";\n  Network[\"IGNITE_NFT\"] = \"igniteNftPass\";\n})(Network || (Network = {}));\n\nconst defaultConfiguration = {\n  networkAddressMappings: {\n    // test networks\n    tigoYhp9SpCDoCQmXGj2im5xa3mnjR1zuXrpCJ5ZRmi: Network.IGNITE,\n    tig2iQjtihM8GbWS1z5LJi9ytTkj4poeh2N3MW4n9gt: Network.IGNITE_NFT,\n    // production networks\n    ignREusXmGrscGNUesoU9mxfds9AiYTezUKex2PsZV6: Network.IGNITE,\n    ign2PJfwxvYxAZpMdXgLdY4VLCnChPZWjtTeQwQfQdc: Network.IGNITE_NFT\n  },\n  networkConfigs: {\n    requiresGatekeeperRecordStatusCheck: true,\n    pollChainIntervalMilliseconds: 2000,\n    pollChainNumberRetries: 30,\n    [Network.IGNITE]: {\n      requiresGatekeeperRecordStatusCheck: true\n    },\n    [Network.IGNITE_NFT]: {\n      requiresGatekeeperRecordStatusCheck: true\n    }\n  }\n};\n\nconst config = gatekeeperNetwork => {\n  var _a;\n\n  const networkName = gatekeeperNetwork ? defaultConfiguration.networkAddressMappings[gatekeeperNetwork] : null;\n  const networkConfig = networkName ? defaultConfiguration.networkConfigs[networkName] : null;\n  const {\n    pollChainIntervalMilliseconds,\n    pollChainNumberRetries\n  } = defaultConfiguration.networkConfigs;\n  return {\n    pollChainNumberRetries,\n    pollChainIntervalMilliseconds,\n    requiresGatekeeperRecordStatusCheck: (_a = networkConfig === null || networkConfig === void 0 ? void 0 : networkConfig.requiresGatekeeperRecordStatusCheck) !== null && _a !== void 0 ? _a : defaultConfiguration.networkConfigs.requiresGatekeeperRecordStatusCheck\n  };\n};\n\nexports.default = config;","map":{"version":3,"sources":["/Users/shawn/metaplex/js/packages/candy-machine-ui/node_modules/@civic/solana-gateway-react/dist/esm/networkConfig.js"],"names":["Object","defineProperty","exports","value","Network","defaultConfiguration","networkAddressMappings","tigoYhp9SpCDoCQmXGj2im5xa3mnjR1zuXrpCJ5ZRmi","IGNITE","tig2iQjtihM8GbWS1z5LJi9ytTkj4poeh2N3MW4n9gt","IGNITE_NFT","ignREusXmGrscGNUesoU9mxfds9AiYTezUKex2PsZV6","ign2PJfwxvYxAZpMdXgLdY4VLCnChPZWjtTeQwQfQdc","networkConfigs","requiresGatekeeperRecordStatusCheck","pollChainIntervalMilliseconds","pollChainNumberRetries","config","gatekeeperNetwork","_a","networkName","networkConfig","default"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACA,IAAIC,OAAJ;;AACA,CAAC,UAAUA,OAAV,EAAmB;AAChBA,EAAAA,OAAO,CAAC,QAAD,CAAP,GAAoB,YAApB;AACAA,EAAAA,OAAO,CAAC,YAAD,CAAP,GAAwB,eAAxB;AACH,CAHD,EAGGA,OAAO,KAAKA,OAAO,GAAG,EAAf,CAHV;;AAIA,MAAMC,oBAAoB,GAAG;AACzBC,EAAAA,sBAAsB,EAAE;AACpB;AACAC,IAAAA,2CAA2C,EAAEH,OAAO,CAACI,MAFjC;AAGpBC,IAAAA,2CAA2C,EAAEL,OAAO,CAACM,UAHjC;AAIpB;AACAC,IAAAA,2CAA2C,EAAEP,OAAO,CAACI,MALjC;AAMpBI,IAAAA,2CAA2C,EAAER,OAAO,CAACM;AANjC,GADC;AASzBG,EAAAA,cAAc,EAAE;AACZC,IAAAA,mCAAmC,EAAE,IADzB;AAEZC,IAAAA,6BAA6B,EAAE,IAFnB;AAGZC,IAAAA,sBAAsB,EAAE,EAHZ;AAIZ,KAACZ,OAAO,CAACI,MAAT,GAAkB;AACdM,MAAAA,mCAAmC,EAAE;AADvB,KAJN;AAOZ,KAACV,OAAO,CAACM,UAAT,GAAsB;AAClBI,MAAAA,mCAAmC,EAAE;AADnB;AAPV;AATS,CAA7B;;AAqBA,MAAMG,MAAM,GAAIC,iBAAD,IAAuB;AAClC,MAAIC,EAAJ;;AACA,QAAMC,WAAW,GAAGF,iBAAiB,GAAGb,oBAAoB,CAACC,sBAArB,CAA4CY,iBAA5C,CAAH,GAAoE,IAAzG;AACA,QAAMG,aAAa,GAAGD,WAAW,GAAGf,oBAAoB,CAACQ,cAArB,CAAoCO,WAApC,CAAH,GAAsD,IAAvF;AACA,QAAM;AAAEL,IAAAA,6BAAF;AAAiCC,IAAAA;AAAjC,MAA4DX,oBAAoB,CAACQ,cAAvF;AACA,SAAO;AACHG,IAAAA,sBADG;AAEHD,IAAAA,6BAFG;AAGHD,IAAAA,mCAAmC,EAAE,CAACK,EAAE,GAAGE,aAAa,KAAK,IAAlB,IAA0BA,aAAa,KAAK,KAAK,CAAjD,GAAqD,KAAK,CAA1D,GAA8DA,aAAa,CAACP,mCAAlF,MAA2H,IAA3H,IAAmIK,EAAE,KAAK,KAAK,CAA/I,GAAmJA,EAAnJ,GAAwJd,oBAAoB,CAACQ,cAArB,CAAoCC;AAH9N,GAAP;AAKH,CAVD;;AAWAZ,OAAO,CAACoB,OAAR,GAAkBL,MAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Network;\n(function (Network) {\n    Network[\"IGNITE\"] = \"ignitePass\";\n    Network[\"IGNITE_NFT\"] = \"igniteNftPass\";\n})(Network || (Network = {}));\nconst defaultConfiguration = {\n    networkAddressMappings: {\n        // test networks\n        tigoYhp9SpCDoCQmXGj2im5xa3mnjR1zuXrpCJ5ZRmi: Network.IGNITE,\n        tig2iQjtihM8GbWS1z5LJi9ytTkj4poeh2N3MW4n9gt: Network.IGNITE_NFT,\n        // production networks\n        ignREusXmGrscGNUesoU9mxfds9AiYTezUKex2PsZV6: Network.IGNITE,\n        ign2PJfwxvYxAZpMdXgLdY4VLCnChPZWjtTeQwQfQdc: Network.IGNITE_NFT,\n    },\n    networkConfigs: {\n        requiresGatekeeperRecordStatusCheck: true,\n        pollChainIntervalMilliseconds: 2000,\n        pollChainNumberRetries: 30,\n        [Network.IGNITE]: {\n            requiresGatekeeperRecordStatusCheck: true,\n        },\n        [Network.IGNITE_NFT]: {\n            requiresGatekeeperRecordStatusCheck: true,\n        },\n    },\n};\nconst config = (gatekeeperNetwork) => {\n    var _a;\n    const networkName = gatekeeperNetwork ? defaultConfiguration.networkAddressMappings[gatekeeperNetwork] : null;\n    const networkConfig = networkName ? defaultConfiguration.networkConfigs[networkName] : null;\n    const { pollChainIntervalMilliseconds, pollChainNumberRetries } = defaultConfiguration.networkConfigs;\n    return {\n        pollChainNumberRetries,\n        pollChainIntervalMilliseconds,\n        requiresGatekeeperRecordStatusCheck: (_a = networkConfig === null || networkConfig === void 0 ? void 0 : networkConfig.requiresGatekeeperRecordStatusCheck) !== null && _a !== void 0 ? _a : defaultConfiguration.networkConfigs.requiresGatekeeperRecordStatusCheck,\n    };\n};\nexports.default = config;\n"]},"metadata":{},"sourceType":"script"}